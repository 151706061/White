<?xml version="1.0" ?>
<project name="Macrodefs">
  <loadtasks assembly="..\tools\nant\CustomTasks\macrodef.dll"/>
  <property name="framework.dir" value="c:\windows\microsoft.net\framework\v3.5"/>
  <property name="nunit.exe" value="tools\nunit\nunit-console.exe"/>

  <macrodef name="component-compile">
    <sequential>
      <parseTarget target="${target::get-current-target()}"/>
      <msbuild-compile project="..\Components\${component}\${component}.sln"/>
    </sequential>
  </macrodef>
  
  <macrodef name="msbuild-compile">
    <attributes>
      <attribute name="project"/>
    </attributes>
    <sequential>
      <echo message="Building ${project} using MSBuild from ${framework.dir}" />
      <exec program="${framework.dir}\msbuild.exe">
        <arg value="/t:Build"/>
        <arg value="/verbosity:quiet"/>
        <arg value="/nologo"/>
        <arg value="${project}"/>
        <arg value="/p:Configuration=Debug"/>
      </exec>
    </sequential>
  </macrodef>

  <macrodef name="exec-ndoc">
    <attributes>
      <attribute name="assembly"/>
      <attribute name="project"/>
    </attributes>
    <sequential>
      <property name="ndoc.dir" value="${build.output.dir}\NDoc"/>
      <exec program="tools\ndoc\NDocConsole.exe">
        <arg value="${project}\bin\debug\${assembly}"/>
        <arg value="-OutputDirectory=${ndoc.dir}\${project}"/>
        <arg value="-HtmlHelpName=${path::get-full-path(ndoc.dir)}\index.html"/>
      </exec>
    </sequential>
  </macrodef>

  <macrodef name="component-clean">
    <sequential>
      <parseTarget target="${target::get-current-target()}"/>
      <clean-dir dir="..\Output\Components\${component}"/>
    </sequential>
  </macrodef>

  <macrodef name="clean-dir">
    <attributes>
      <attribute name="dir"/>
    </attributes>
    <sequential>
      <delete>
        <fileset basedir="${dir}">
          <include name="**/*.*"/>
        </fileset>
      </delete>
      <mkdir dir="${dir}"/>
    </sequential>
  </macrodef>

  <macrodef name="nunit-test">
    <attributes>
      <attribute name="projects"/>
    </attributes>
    <sequential>
      <property name="assemblies" value=""/>
      <foreach item="String" in="${projects}" delim="," property="project">
        <property name="assemblies" value="${assemblies} ${project}\bin\debug\White.${project}.dll"/>
      </foreach>
      <property name="nunit.exe" value="tools\nunit\nunit-console.exe"/>
      <exec program="${nunit.exe}" commandline="/nologo /nothread ${assemblies} /xml:&quot;${build.output.dir}\TestResults.xml&quot;" failonerror="${fail.test.onerror}"/>
    </sequential>
  </macrodef>

  <macrodef name="unit-test">
    <sequential>
      <copy file="..\Components\log4net4test.config" tofile="..\Output\Components\${component}\log4net.config"/>
      <property name="nunit.arg" value="..\Output\Components\${component}\White.${component}.UnitTests.dll /xml:&quot;..\Output\Components\${component}\${component}_UnitTestResults.xml&quot;"/>
      <exec program="${nunit.exe}" commandline="/nologo ${nunit.arg}" failonerror="${fail.test.onerror}"/>
    </sequential>
  </macrodef>

  <macrodef name="ui-test">
    <sequential>
      <copy file="..\Components\log4net4test.config" tofile="..\Output\Components\${component}\log4net.config"/>
      <property name="nunit.arg" value="..\Output\Components\${component}\White.${component}.UITests.dll /xml:&quot;..\Output\Components\${component}\${component}_UITestResults.xml&quot;"/>
      <exec program="${nunit.exe}" commandline="/nologo ${nunit.arg}" failonerror="${fail.test.onerror}"/>
    </sequential>
  </macrodef>

  <macrodef name="core-test">
    <attributes>
      <attribute name="excludes" default=""/>
      <attribute name="includes" default=""/>
      <attribute name="framework"/>
    </attributes>
    <sequential>
      <copy file="..\Components\log4net4test.config" tofile="..\Output\Components\Core\log4net.config"/>
      <copy file="..\Components\Core\Tests\UITests\app.config.template" tofile="..\Output\Components\Core\White.Core.UITests.dll.config" overwrite="true">
        <filterchain>
          <replacetokens>
            <token key="TestMode" value="${framework}" />
          </replacetokens>
        </filterchain>
      </copy>

      <property name="nunit.arg" value="..\Output\Components\Core\White.Core.UITests.dll /xml:&quot;..\Output\Components\Core\Core_UITestResults_${framework}_.xml&quot;"/>
      <if test="${excludes==''}">
        <exec program="${nunit.exe}" commandline="/nologo ${nunit.arg} /include:&quot;${includes}&quot;" failonerror="${fail.test.onerror}"/>
      </if>
      <if test="${includes==''}">
        <exec program="${nunit.exe}" commandline="/nologo ${nunit.arg} /exclude:&quot;${excludes}&quot;" failonerror="${fail.test.onerror}"/>
      </if>
    </sequential>
  </macrodef>
</project>