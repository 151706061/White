<?xml version="1.0" ?>
<project name="Macrodefs">
  <loadtasks assembly="..\tools\nant\CustomTasks\macrodef.dll"/>
  <property name="framework.dir" value="c:\windows\microsoft.net\framework\v3.5"/>
  <property name="nunit.exe" value="tools\nunit\nunit-console-x86.exe" if="${property::get-value('processor-type') == '64bit'}"/>
  <property name="nunit.exe" value="tools\nunit\nunit-console.exe" if="${property::get-value('processor-type') == '32bit'}"/>

  <macrodef name="component-compile">
    <sequential>
      <parseTarget target="${target::get-current-target()}"/>
      <msbuild-compile project="..\Components\${component}\${component}.sln"/>
    </sequential>
  </macrodef>
  
  <macrodef name="msbuild-compile">
    <attributes>
      <attribute name="project"/>
    </attributes>
    <sequential>
      <echo message="Building ${project} using MSBuild from ${framework.dir}" />
      <exec program="${framework.dir}\msbuild.exe">
        <arg value="/t:Build"/>
        <arg value="/verbosity:quiet"/>
        <arg value="/nologo"/>
        <arg value="${project}"/>
        <arg value="/p:Configuration=Debug"/>
      </exec>
    </sequential>
  </macrodef>

  <macrodef name="component-clean">
    <sequential>
      <parseTarget target="${target::get-current-target()}"/>
      <clean-dir dir="..\Output\Components\${component}"/>
    </sequential>
  </macrodef>

  <macrodef name="clean-dir">
    <attributes>
      <attribute name="dir"/>
    </attributes>
    <sequential>
      <delete>
        <fileset basedir="${dir}">
          <include name="**/*.*"/>
        </fileset>
      </delete>
      <mkdir dir="${dir}"/>
    </sequential>
  </macrodef>

  <macrodef name="unit-test">
    <sequential>
      <copy file="..\Components\log4net4test.config" tofile="..\Output\Components\${component}\log4net.config"/>
      <property name="nunit.arg" value="..\Output\Components\${component}\White.${component}.UnitTests.dll /xml:&quot;..\Output\Components\${component}\${component}_UnitTestResults.xml&quot;"/>
      <exec program="${nunit.exe}" commandline="/nologo /nothread ${nunit.arg}" failonerror="${fail.test.onerror}"/>
    </sequential>
  </macrodef>

  <macrodef name="ui-test">
    <attributes>
      <attribute name="test.assembly.last.name" default="UITests"/>
    </attributes>
    <sequential>
      <copy file="..\Components\log4net4test.config" tofile="..\Output\Components\${component}\log4net.config"/>
      <if test="${property::exists('test.fixture')}">
        <property name="nunit.arg" value="..\Output\Components\${component}\White.${component}.${test.assembly.last.name}.dll /fixture:${test.fixture} /xml:&quot;..\Output\Components\${component}\${component}_${test.assembly.last.name}Results.xml&quot;"/>
      </if>
      <if test="${not property::exists('test.fixture')}">
        <property name="nunit.arg" value="..\Output\Components\${component}\White.${component}.${test.assembly.last.name}.dll /xml:&quot;..\Output\Components\${component}\${component}_${test.assembly.last.name}Results.xml&quot;"/>
      </if>
      <exec program="${nunit.exe}" commandline="/nologo /nothread ${nunit.arg}" failonerror="${fail.test.onerror}"/>
    </sequential>
  </macrodef>

  <macrodef name="core-test">
    <attributes>
      <attribute name="excludes" default=""/>
      <attribute name="includes" default=""/>
      <attribute name="java.location" default=""/>
      <attribute name="framework"/>
    </attributes>
    <sequential>
      <copy file="..\Components\Core\Tests\UITests\app.config.template" tofile="..\Output\Components\Core\White.Core.UITests.dll.config" overwrite="true">
        <filterchain>
          <replacetokens>
            <token key="TestMode" value="${framework}" />
            <token key="JavaLocation" value="${java.location}" />
            <token key="ProcessorType" value="${processor-type}" />
          </replacetokens>
        </filterchain>
      </copy>
      <copy file="..\Components\log4net4test.config" tofile="..\Output\Components\${component}\log4net.config"/>

      <if test="${property::exists('test.fixture')}">
        <property name="nunit.arg" value="..\Output\Components\Core\White.Core.UITests.dll /fixture:${test.fixture} /xml:&quot;..\Output\Components\Core\Core_UITestResults_${framework}_.xml&quot;"/>
      </if>
      <if test="${not property::exists('test.fixture')}">
        <property name="nunit.arg" value="..\Output\Components\Core\White.Core.UITests.dll /xml:&quot;..\Output\Components\Core\Core_UITestResults_${framework}_.xml&quot;"/>
      </if>
      
      <if test="${excludes==''}">
        <exec program="${nunit.exe}" commandline="/nologo /nothread ${nunit.arg} /include:&quot;${includes}&quot;" failonerror="${fail.test.onerror}"/>
      </if>
      <if test="${includes==''}">
        <exec program="${nunit.exe}" commandline="/nologo /nothread ${nunit.arg} /exclude:&quot;${excludes}&quot;" failonerror="${fail.test.onerror}"/>
      </if>
    </sequential>
  </macrodef>

  <macrodef name="clean-test-project">
    <attributes>
      <attribute name="project.dir"/>
    </attributes>
    <sequential>
      <delete>
        <fileset basedir="${project.dir}">
          <include name="bin/**/*.*"/>
          <include name="obj/**/*.*"/>
        </fileset>
      </delete>
    </sequential>
  </macrodef>
</project>